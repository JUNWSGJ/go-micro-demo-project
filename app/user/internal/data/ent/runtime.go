// Code generated by entc, DO NOT EDIT.

package ent

import (
	"go-micro-demo-project/app/user/internal/data/ent/schema"
	"go-micro-demo-project/app/user/internal/data/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescMobile is the schema descriptor for mobile field.
	userDescMobile := userFields[1].Descriptor()
	// user.MobileValidator is a validator for the "mobile" field. It is called by the builders before save.
	user.MobileValidator = userDescMobile.Validators[0].(func(string) error)
	// userDescNickname is the schema descriptor for nickname field.
	userDescNickname := userFields[2].Descriptor()
	// user.NicknameValidator is a validator for the "nickname" field. It is called by the builders before save.
	user.NicknameValidator = userDescNickname.Validators[0].(func(string) error)
	// userDescWxOpenid is the schema descriptor for wx_openid field.
	userDescWxOpenid := userFields[3].Descriptor()
	// user.WxOpenidValidator is a validator for the "wx_openid" field. It is called by the builders before save.
	user.WxOpenidValidator = userDescWxOpenid.Validators[0].(func(string) error)
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userFields[5].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(func() time.Time)
	// userDescUpdateTime is the schema descriptor for update_time field.
	userDescUpdateTime := userFields[6].Descriptor()
	// user.DefaultUpdateTime holds the default value on creation for the update_time field.
	user.DefaultUpdateTime = userDescUpdateTime.Default.(func() time.Time)
}
